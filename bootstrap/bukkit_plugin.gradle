buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'org.yaml:snakeyaml:1.5'
  }
}

import org.yaml.snakeyaml.Yaml

// Plugin information loaded from the YML file
ext.plugin = (new Yaml()).load(new FileInputStream(new File(projectDir, "src/main/resources/plugin.yml")))

// Determine the group/artifact
ext.pkg = plugin.main.substring(0, plugin.main.lastIndexOf('.'))

// Our group/artifact ids. Version is declared in the main file
group = pkg.substring(0, pkg.lastIndexOf('.'))
archivesBaseName = plugin.name.toLowerCase()
version = project.version

/**
 * Scaffolds the Bukkit project.
 */
task scaffold << {
  // Make artifact source directory
  def mainClass = plugin.main.substring(plugin.main.lastIndexOf('.') + 1, plugin.main.length())
  def artifactPath = new File('src/main/java/' + plugin.main.replace('.', '/')).getAbsolutePath()
  def artifactSrcDir = new File(artifactPath.substring(0, artifactPath.lastIndexOf(File.separator)))
  artifactSrcDir.mkdirs()

  // Copy plugin bootstrap file over
  copy {
    from 'bootstrap/'
    into artifactSrcDir.getPath()
    include 'PluginBootstrap.java'
    rename '.*', plugin.name + '.java'

    filter(ReplaceTokens, tokens: [pkg: pkg, pluginName: mainClass])
  }

  if ((cmd('git remote -v') =~ /origin.+?bukkit-bootstrap\.git/).find()) {
    cmd('git remote rename origin bukkit-bootstrap')
  }

  delete {
    delete 'README.md'
  }
}

if (!project.hasProperty('testPluginDir')) {
  ext.testPluginDir = '';
}
if (!project.hasProperty('remotePluginDir')) {
  ext.remotePluginDir = '';
}


task testCopy << {
  cmd("mkdir -p $testPluginDir")
  cmd("cp $projectDir/build/${plugin.name}.jar $testPluginDir")
}

task remoteCopy << {
  cmd("scp $projectDir/build/${plugin.name}.jar $remotePluginDir")
}

task copyPlugin(type: Copy) {
  description 'Copy resulting JAR to a nice plugin name'
  dependsOn 'build'

  description 'Copies the plugin from the libs/ directory into the main build directory.'
  from 'build/libs/'
  into 'build/'
  include jar.archiveName
  rename jar.archiveName, plugin.name + '.jar'
}

modifyPom { 
  project {
    name plugin.name
    description plugin.description
    url plugin.url
  }
}
